{{
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
__________               __           /\
\______   \ ____   ____ |  | _____.__.)/_____
 |    |  _// __ \ /    \|  |/ <   |  |/  ___/
 |    |   \  ___/|   |  \    < \___  |\___ \
 |______  /\___  >___|  /__|_ \/ ____/____  >
        \/     \/     \/     \/\/         \/    Font_Manager
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 Version 0.6
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 This object allows easy access to the headers of a font-file. Using these functions ensures
 that code will be compatible with future driver versions, at least if there are no major changes.

 The setter functions also allow to create a compatible header to be used by the Graphics-object.
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
}}


CON
  HEADER_SIZE = 8

  HEADER_FONTDATA = 0
  HEADER_START_CHAR = 4
  HEADER_END_CHAR = 5
  HEADER_WIDTH = 6
  HEADER_HEIGHT = 7

  MAX_FONTS = 10


DAT
  fontCnt byte 0
  fontPtr long 0[ MAX_FONTS ]


PUB addFont( adr ) : idx
{{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
   This function needs to be used by your programs setup code,
   in case you want to make use of font related functions.
   The idx returned here can then be used as fontnr-parameter,
   for example in:
   text( dpixel, fontnr, x,y,col1,col2, string("Some Text") )
   =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }}

  idx:=fontCnt
  if fontCnt<MAX_FONTS
    fontPtr[ fontCnt++ ]:=adr
  else
    return -1


PUB getFontAdr( font_idx ) : adr
  return long[ fontPtr[ font_idx ] + HEADER_FONTDATA ]


PUB getFontWidth( font_idx ) : w
  return byte[ fontPtr[ font_idx ] + HEADER_WIDTH ]


PUB getFontHeight( font_idx ) : h
  return byte[ fontPtr[ font_idx ] + HEADER_HEIGHT ]


PUB getFontStartChar( font_idx ) : cs
  return byte[ fontPtr[ font_idx ] + HEADER_START_CHAR ]


PUB getFontEndChar( font_idx ) : ce
  return byte[ fontPtr[ font_idx ] + HEADER_END_CHAR ]


PUB setFontAdr( font_idx, font_adr )
  long[ fontPtr[ font_idx ] + HEADER_FONTDATA ]:=font_adr


PUB setFontWidth( font_idx, w )
  byte[ fontPtr[ font_idx ] + HEADER_WIDTH ]:=w


PUB setFontHeight( font_idx, h )
  byte[ fontPtr[ font_idx ] + HEADER_HEIGHT ]:=h


PUB setFontStartChar( font_idx, cs )
  byte[ fontPtr[ font_idx ] + HEADER_START_CHAR ]:=cs


PUB setFontEndChar( font_idx, ce )
  byte[ fontPtr[ font_idx ] + HEADER_END_CHAR ]:=ce


dat

{{
  Terms of Use: MIT License

  Permission is hereby granted, free of charge, to any person obtaining a copy of this
  software and associated documentation files (the "Software"), to deal in the Software
  without restriction, including without limitation the rights to use, copy, modify,
  merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to the following
  conditions:

  The above copyright notice and this permission notice shall be included in all copies
  or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}

