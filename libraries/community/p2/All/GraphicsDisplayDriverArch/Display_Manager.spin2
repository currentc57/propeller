{{
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
__________               __           /\
\______   \ ____   ____ |  | _____.__.)/_____
 |    |  _// __ \ /    \|  |/ <   |  |/  ___/
 |    |   \  ___/|   |  \    < \___  |\___ \
 |______  /\___  >___|  /__|_ \/ ____/____  >
        \/     \/     \/     \/\/         \/    Display_Manager
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 Version 0.6
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
 This object allows easy access to the data of a display driver. Using these functions ensures
 that code will be compatible with future driver versions, at least if there are no major changes.

 Known limitations:
   * Due to the used data-structures in the display drivers which, should ensure to have a
     common interface, the one display driver can only be instantiated once. Meaning, that
     currently there is only one display of a kind allowed in a setup.
     Workaround: duplicate the display driver code.
     How to fix: the display drivers display_header has to be moved into a VAR section.
     Needs some deeper understanding of how objects and their instances and function pointers
     are organized.

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
}}


CON
  HEADER_SIZE = 12

  HEADER_PIXPASM = 0
  HEADER_SETCLIP = 4
  HEADER_WIDTH = 8
  HEADER_HEIGHT = 10

  MAX_DISPLAYS = 4


DAT
  displayCnt byte 0
  displayPtr long 0[ MAX_DISPLAYS ]


PUB addDisplay( adr ) : idx
{{ =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
   This function needs to be used by your programs setup code,
   in case you want to make use of font related functions.
   The idx returned here can then be used as fontnr-parameter,
   for example in:
   text( dpixel, fontnr, x,y,col1,col2, string("Some Text") )
   =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-= }}

  idx:=displayCnt
  if displayCnt<MAX_DISPLAYS
    displayPtr[ displayCnt++ ]:=adr
  else
    return -1


PUB getPixelPASM( display_idx ) : adr
  return long[ displayPtr[ display_idx ] + HEADER_PIXPASM ]


PUB getSetClipping( display_idx ) : adr
  return long[ displayPtr[ display_idx ] + HEADER_SETCLIP ]

PUB getWidth( display_idx ) : w
  return word[ displayPtr[ display_idx ] + HEADER_WIDTH ]


PUB getHeight( display_idx ) : h
  return word[ displayPtr[ display_idx ] + HEADER_HEIGHT ]


dat

{{
  Terms of Use: MIT License

  Permission is hereby granted, free of charge, to any person obtaining a copy of this
  software and associated documentation files (the "Software"), to deal in the Software
  without restriction, including without limitation the rights to use, copy, modify,
  merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
  permit persons to whom the Software is furnished to do so, subject to the following
  conditions:

  The above copyright notice and this permission notice shall be included in all copies
  or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
  PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF
  CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
  OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}

