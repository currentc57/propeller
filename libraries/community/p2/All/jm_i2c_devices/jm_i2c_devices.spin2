'' =================================================================================================
''
''   File....... jm_i2c_devices.spin2
''   Purpose.... I2C bus scanner; shows connected devices in matrix format
''   Author..... Jon "JonnyMac" McPhalen
''               Copyright (C) 2018-2020 Jon McPhalen
''               -- see below for terms of use
''   E-mail..... jon.mcphalen@gmail.com
''   Started....
''   Updated.... 08 DEC 2020
''
'' =================================================================================================


con { timing }

  CLK_FREQ = 200_000_000                                        ' system freq as a constant
  MS_001   = CLK_FREQ / 1_000                                   ' ticks in 1ms
  US_001   = CLK_FREQ / 1_000_000                               ' ticks in 1us

  BR_TERM  = 115_200                                            ' terminal baud rate

  _clkfreq = CLK_FREQ                                           ' set system clock


con { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }

  SF_CS    = 61  { O }                                          ' serial flash
  SF_SCK   = 60  { O }
  SF_SDO   = 59  { O }
  SF_SDI   = 58  { I }

  SD_SCK   = 61  { O }                                          ' sd card
  SD_CS    = 60  { O }
  SD_SDI   = 59  { O }
  SD_SDO   = 58  { I }

  LED2     = 57  { O }                                          ' Eval and Edge LEDs
  LED1     = 56  { O }


con { app io pins }

  SDA      = 55  { IO }                                         ' I2C bus
  SCL      = 54  { O }


con

  #true, ON, OFF                                                ' digital control
  #0, NO, YES

  TRIES = 1                                                     ' should not be needed!


obj

' main                                                          ' * master Spin cog
  i2c  : "jm_i2c"                                               '   i2c bus driver
  term : "jm_fullduplexserial"                                  ' * serial IO for terminal

' * uses cog when loaded


dat

  Banner        byte    "P2 I2C Devices", 13
                byte    "-- dddd_aaa_x (8-bit) format", 13, 13, 0

  Header        byte    "    00 02 04 06 08 0A 0C 0E", 13
                byte    "    -- -- -- -- -- -- -- --", 13
                byte    0


pub main() | count, type, addr, devid, ok

  setup()

  wait_for_terminal(true)

  term.str(@Banner)
  term.str(@Header)

  count := 0

  repeat type from %0001 to %1110                               ' %1111 not valid
    term.fhex(type << 4, 2)
    term.txn(" ", 2)
    repeat addr from %000 to %111
      devid := (type << 4) | (addr << 1)                        ' build device id
      if (i2c.present(devid))                                   ' ping device
        term.fhex(devid, 2)                                     ' show 8-bit id as hex
        term.tx(" ")
        ++count
      else
        term.str(string(".. "))
      waitms(1)
    term.tx(13)

  term.fstr1(string("\rDevices: %d"), count)

  repeat
    waitct(0)


pub setup()

  i2c.setup(SCL, SDA, 100, i2c.PU_NONE)                          ' i2c @ 100kHz, external pull-ups

  term.tstart(BR_TERM)                                           ' start terminal io


pub wait_for_terminal(clear)

  ' Download to RAM with F10
  ' F12 to open PST
  ' Click [Enable]
  ' Press Enter

  term.rxflush()
  term.rx()
  if (clear)
    term.tx(term.CLS)


con { license }

{{

  Terms of Use: MIT License

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.

}}